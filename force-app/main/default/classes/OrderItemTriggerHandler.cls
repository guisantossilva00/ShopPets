public class OrderItemTriggerHandler {
    
    /*
* Calcula e encontra os valores referentes a ação de venda e seus respectivos itens,
* para atualizar os campos do item do pedido, como; preço durante a ação de venda, desconto
* entre outros.
*/
    public static void valueDuringAction(){
        List<OrderItem> orderItens = trigger.new;
        List<SalesActionItems__c> actions;
        List<SalesActionCustomers__c> customers;
        for(OrderItem orderItem : orderItens){ 
            if(trigger.isInsert){
                if(orderitem.RecordTypeName__c != 'Sales') continue;   
            } else if(trigger.isUpdate){
                OrderItem old = (OrderItem) Trigger.OldMap.get(orderItem.Id);
                if(orderitem.RecordTypeName__c != 'Sales' || orderItem.UnitPrice == old.UnitPrice) continue; 
            }
            
            customers = [SELECT id, SalesAction__c FROM SalesActionCustomers__c 
                         WHERE AccountLkp__c =: orderItem.Account__c AND SalesAction__r.RepresentativeLkp__c != null
                         AND SalesAction__r.RepresentativeLkp__c =: OrderItem.OrderTeamFml__c 
                         AND SalesAction__r.StartDateDte__c <= TODAY AND SalesAction__r.EndDateDte__c >= TODAY];
            
            if(customers != null && customers.size() > 0){
                SalesActionCustomers__c customer = customers.get(0);
                
                if(orderItem.quantity == null || orderItem.quantity == 0){
                    orderItem.IdSalesActionItens__c = null;
                    orderItem.DiscountSalesActionItens__c = null;
                    orderItem.PriceSalesActionItens__c = null; 
                    continue;
                }
                
                actions = [SELECT id, DiscountNmb__c FROM SalesActionItems__c WHERE 
                           SalesAction__c =: customer.SalesAction__c 
                           AND InitialVolumeNmb__c <=: orderItem.quantity
                           AND EndVolumeNmb__c >=: orderItem.quantity
                           AND SalesAction__r.Status__c = 'Aprovado' 
                           AND ProductLkp__c =: orderItem.Product2Id];

                if(actions.size() > 0){
                    SalesActionItems__c salesActionItem = actions.get(0);
                    orderItem.IdSalesActionItens__c = salesActionItem.id;
                    orderItem.DiscountSalesActionItens__c = salesActionItem.DiscountNmb__c;
                    if(orderItem.UnitPrice != null && orderItem.DiscountSalesActionItens__c != null){
                        if(orderItem.DiscountSalesActionItens__c == 0){
                            orderItem.PriceSalesActionItens__c = orderItem.UnitPrice;
                        } else {
                            orderItem.PriceSalesActionItens__c = orderItem.UnitPrice - (orderItem.UnitPrice * orderItem.DiscountSalesActionItens__c / 100);
                            orderItem.UnitPrice = orderItem.PriceSalesActionItens__c;
                            orderItem.TotalNmb__c = orderItem.UnitPrice * orderItem.Quantity;
                        }
                    } else {
                        orderItem.PriceSalesActionItens__c = 0;
                    }
                } else {
                    orderItem.IdSalesActionItens__c = null;
                    orderItem.DiscountSalesActionItens__c = null;
                    orderItem.PriceSalesActionItens__c = null;      
                }
            } else {
                orderItem.IdSalesActionItens__c = null;
                orderItem.DiscountSalesActionItens__c = null;
                orderItem.PriceSalesActionItens__c = null;

            }
        }
    } 
        public static void testMock(){
       Integer i = 0;
        
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
       
    }
}